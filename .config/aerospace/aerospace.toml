# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders style=round order=above hidpi=on active_color="gradient(top_right=0xff7aa2f7,bottom_left=0xfff7768e)" inactive_color=0xc02c2e34 background_color=0xff21252b  width=1.0'
]

#active_color="gradient(top_right=0xff7aa2f7,bottom_left=0xfff7768e)" inactive_color=0xc02c2e34

exec-on-workspace-change = [
    '/bin/bash', '-c',
    '~/.config/scripts/pip-move3.sh',
]

on-focused-monitor-changed = ['exec-and-forget ~/.config/scripts/brave-move.sh']
# 'move-mouse monitor-lazy-center',
# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 60

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Workspaces for monitors
[workspace-to-monitor-force-assignment]
1 = 'main'
2 = 'main'
3 = 1
4 = 1
mac = 'built-in'


# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal =  [
  { monitor.'built-in.*' = 4 },
  8
]
inner.vertical =    [
  { monitor.'built-in.*' = 4 },
  8
]
outer.left =       [
  { monitor.'built-in.*' = 3 },
  8
]
outer.bottom =    [
  { monitor.'built-in.*' = 3 },
  8
]
# outer.top =        11
outer.top =    [
  { monitor.'built-in.*' = 3 },
  11
]
outer.right = [
  { monitor.'built-in.*' = 3 },
  8
]

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
alt-shift-enter = 'exec-and-forget open -na WezTerm'
alt-enter = 'exec-and-forget open -na Ghostty'
# alt-ctrl-enter = 'exec-and-forget open -na Ghostty --args -e zsh -ic "tmux new -A -s main"'
# alt-enter = 'exec-and-forget open -na Ghostty --args -e zsh -ic "tmux attach-session -t $(tmux list-sessions -F "#{session_name}" 2>/dev/null | tail -n1)"'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-left = 'focus left --boundaries all-monitors-outer-frame'
alt-down = 'focus down --boundaries all-monitors-outer-frame'
alt-up = 'focus up --boundaries all-monitors-outer-frame'
alt-right = 'focus right --boundaries all-monitors-outer-frame'


alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/comands#move
alt-shift-left = 'move left'
alt-shift-down = 'move down'
alt-shift-up = 'move up'
alt-shift-right = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = 'workspace 7'
alt-8 = 'workspace 8'
alt-9 = 'workspace 9'
alt-0 = 'workspace 10'
alt-p = 'workspace mac'


# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
alt-shift-2 = 'move-node-to-workspace  --focus-follows-window 2'
alt-shift-3 = 'move-node-to-workspace  --focus-follows-window 3'
alt-shift-4 = 'move-node-to-workspace  --focus-follows-window 4'
alt-shift-5 = 'move-node-to-workspace  --focus-follows-window 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-7 = 'move-node-to-workspace 7'
alt-shift-8 = 'move-node-to-workspace 8'
alt-shift-9 = 'move-node-to-workspace 9'
alt-shift-0 = 'move-node-to-workspace --focus-follows-window 10'
alt-shift-p = 'move-node-to-workspace mac'


alt-shift-d = 'move-workspace-to-monitor right'
alt-shift-a = 'move-workspace-to-monitor left'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'



alt-f = 'fullscreen'
alt-g = 'exec-and-forget open /System/Applications/Mission\ Control.app'
alt-shift-f = 'macos-native-fullscreen'
cmd-shift-s = 'exec-and-forget screencapture -i -c'
alt-m = 'macos-native-minimize'
alt-shift-space = 'layout floating tiling' # 'floating toggle' in i3
alt-s = 'workspace next --wrap-around'
alt-shift-s = 'workspace prev --wrap-around'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-d = 'workspace-back-and-forth'
# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']





# Move apps to relevant workspaces

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-id = 'com.tdesktop.Telegram'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace 3"


# [[on-window-detected]]
# if.app-id = 'com.apple.Safari'
# run = "move-node-to-workspace 1"


# [[on-window-detected]]
# if.app-id = 'com.brave.Browser'
# run = "move-node-to-workspace 1"


# [[on-window-detected]]
# if.app-id = 'com.brave.Browser'
# if.window-title-regex-substring = 'Picture-in-picture'
# run = 'move-node-to-workspace 5'
# check-further-callbacks = true



# Floating windows
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.microsoft.to-do-mac'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.sublimetext.4'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.anthropic.claudefordesktop'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.apple.Notes'
run = "layout floating"

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = "layout floating"

[[on-window-detected]]
if.window-title-regex-substring = '^Picture-in-Picture$'
run = ['layout floating']
