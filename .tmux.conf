

# Improve colors
set -g default-terminal "${TERM}"

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
set -as terminal-features ",*:RGB"
# set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
# set -g status-position top

# set -g 'status-format[1]' ''
# set -g status 2
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"
bind | split-window -h -c "#{pane_current_path}"
unbind '"'
bind - split-window -v -c "#{pane_current_path}"
# create new window with Alt+n
bind-key -n M-n new-window -c "#{pane_current_path}"
# create new session with Alt+N
bind-key -n M-N new-session -c "#{pane_current_path}"
bind -n M-B new-window -n "monitor" btop
# bind  M-B display-popup -h 80% -w 80% -E "btop"
bind -n M-b display-popup -h 80% -w 80% -E "btop"
# closing pane with Alt+q
# bind-key -n M-q confirm-before "kill-pane"
# closing session with Alt+Q
bind-key -n M-Q confirm-before "kill-window"
# bind -n M-e new-window -c "#{pane_current_path}" -n " " nvim
# create new window with Alt+n without name
bind -n M-e new-window -c "#{pane_current_path}" nvim
bind C-c run-shell "tmux neww ~/.config/scripts/tmux-cht.sh"
bind-key -n M-C display-popup -y 45 -h 70% -w 75% -E "tmux new-session -A -s 'CheatSheet' 'nvim ~/Developer/mds/' "
# claude code split window
bind O split-window -h -c "#{pane_current_path}" "zsh -c 'claude; exec zsh'"
# opencode cli popup
# bind-key o split-window -h -c "#{pane_current_path}" "zsh -c 'opencode; exec zsh'"
bind C-f split-window -hc "#{pane_current_path}" "opencode"
bind o popup -w 90% -h 90% -EE -d "#{pane_current_path}" "opencode"


# Popup border
# set -g popup-border-lines "none"

# search sessions
bind w display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --no-border --reverse --header jump-to-session |\
    xargs tmux switch-client -t"

# search windows in current session
bind e display-popup -E "\
    tmux list-windows -F '#{window_index} #{window_name}' |\
    sed '/^$/d' |\
    fzf --no-border --reverse --header jump-to-window |\
    cut -d ' ' -f 1 |\
    xargs tmux select-window -t"

# toggle status bar
bind-key -T prefix t set-option -g status
# Move tmux status bar to top
bind-key C-k run-shell "tmux set-option -g status-position top;"
# Move tmux status bar to bottom
bind-key C-j run-shell "tmux set-option -g status-position bottom;"

# Bind Ctrl-A c to switch to the "config" session (create it if it doesn't exist)
bind-key C if-shell "tmux has-session -t config" "switch-client -t config" "new-session -s config -d; switch-client -t config"

# Bind Ctrl-A w to switch to the "work" session (create it if it doesn't exist)
bind-key W if-shell "tmux has-session -t work" "switch-client -t work" "new-session -s work -d; switch-client -t work"

# Bind Ctrl-A t to switch to the "config" session (create it if it doesn't exist)
bind-key T if-shell "tmux has-session -t test" "switch-client -t test" "new-session -s test -d; switch-client -t test"


# bind -n M-H previous-window
# bind -n M-L next-window
# switch between windows (tmux :b) using Alt+<num>
# bind-key -n M-1 select-window -t :1
# bind-key -n M-2 select-window -t :2
# bind-key -n M-3 select-window -t :3
# bind-key -n M-4 select-window -t :4
# bind-key -n M-5 select-window -t :5
# bind-key -n M-6 select-window -t :6
# bind-key -n M-7 select-window -t :7
# bind-key -n M-8 select-window -t :8
# bind-key -n M-9 select-window -t :9
# bind-key -n M-0 select-window -t :10


# Reload config with 'Prefix + r'
# bind r source-file ~/.tmux.conf
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'


set-option -g prefix C-a
set-window-option -g allow-passthrough on
set-option -g prefix2 C-b

bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r H resize-pane -L 5
bind c new-window -c "#{pane_current_path}"

bind -r m resize-pane -Z

# bind Space switch-client -l

bind s choose-tree -Zs -O time

set -g mouse on
set -sg escape-time 10
set -g base-index 1
setw -g pane-base-index 1
set -g history-limit 50000
set-option -g repeat-time 200
set-option -g renumber-windows on

set-option -g status-interval 1
set-option -g allow-rename on

set-option -g automatic-rename-format '#{pane_current_command}:#{b:pane_current_path}'
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)

# set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

# list of tmux plugins
set -g @plugin 'sunaku/tmux-navigate'
set -g @plugin 'sainnhe/tmux-fzf'
# set -g @plugin "janoamaral/tokyo-night-tmux"
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

# ===========CONFIG FOR PLUGINS==========

# tmux-navigate
set -g @navigate-left  'h'
set -g @navigate-down  'j'
set -g @navigate-up    'k'
set -g @navigate-right 'l'
set -g @navigate-back  '\'



# tmux tokyo-night-tmux
set -g @tokyo-night-tmux_theme jellybeans
# set -g @tokyo-night-tmux_theme tokyonight
# set -g @tokyo-night-tmux_theme night
set -g @tokyo-night-tmux_show_datetime 0
set -g @tokyo-night-tmux_transparent 1
set -g @tokyo-night-tmux_window_tidy_icons 1
set -g @tokyo-night-tmux_show_hostname 1
set -g @tokyo-night-tmux_show_path 0
set -g @tokyo-night-tmux_path_format relative
set -g @tokyo-night-tmux_window_id_style fsquare
set -g @tokyo-night-tmux_show_git 0
set -g @tokyo-night-tmux_pane_id_style dsquare
set -g @tokyo-night-tmux_zoom_id_style dsquare


# style
set -g status-position top
set -g status-justify absolute-centre
set -g status-style 'fg=color7 bg=default'
set -g status-right ''
# set -g status-right ' #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)'
# set -g status-right ''
set -g status-left '#S'
set -g status-left-style 'fg=color8'
set -g status-right-length 0
set -g status-left-length 100
setw -g window-status-current-style 'fg=colour6 bg=default bold'
setw -g window-status-current-format '#I:#W '
setw -g window-status-style 'fg=color8'






set -g @continuum-restore 'on'
set -g @continuum-save-interval '15' # Save every 15 minutes




















# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-q rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-q send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'








# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
